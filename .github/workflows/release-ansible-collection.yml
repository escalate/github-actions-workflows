name: Release
'on':
  workflow_call:
    secrets:
      ANSIBLE_GALAXY_API_TOKEN:
        required: true
jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true

      - name: Set up Python 3.x
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install ansible
        run: pip3 install --disable-pip-version-check ansible

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'

      - name: Install semantic-release
        run: |
          npm install --global semantic-release @semantic-release/exec conventional-changelog-conventionalcommits

      - name: Configure semantic-release
        run: |
          echo '{"preset":"conventionalcommits","plugins":[["@semantic-release/commit-analyzer"],["@semantic-release/release-notes-generator"],["@semantic-release/github"],["@semantic-release/exec",{"publishCmd":"sed -i s/NEXT_VERSION/${nextRelease.version}/ galaxy.yml && ansible-galaxy collection build && ansible-galaxy collection publish --api-key ${{ secrets.ANSIBLE_GALAXY_API_TOKEN }} $(echo ${{ github.repository }} | cut -d/ -f1)-$(echo ${{ github.repository }} | cut -d/ -f2 | cut -d- -f3)-${nextRelease.version}.tar.gz"}]]}' > .releaserc.json

      - name: Update galaxy.yml tags
        run: |
          yq --inplace ".tags=$(find roles/ -path *meta/main.yml -print0 | xargs -0 -L 1 yq '.galaxy_info.galaxy_tags' | yq --output-format json '. |= (sort | unique)')" galaxy.yml

      - name: Run semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          semantic-release
